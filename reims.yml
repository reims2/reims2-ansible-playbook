---
- hosts: all
  become: true
  roles:
    - dokku_bot.ansible_dokku
  vars:
    dokku_hostname: "{{ inventory_hostname }}"
    frontend_domain: "{{ inventory_hostname }}"
    dokku_packages_state: latest
    dokku_vhost_enable: true
    db_name: "reims2-db"
    dokku_network_name: "reims2"
    frontend_app_name: "frontend"
    api_app_name: "api"
    docs_app_name: "docs"
    dokku_users:
      - name: Github Actions
        username: ci-deploy
        ssh_key: "{{ lookup('file', 'creds/deploy_key.pub') }}"
      - name: Local developer for debug
        username: dev
        ssh_key: "{{lookup('file', '~/.ssh/id_rsa.pub')}}"
    dokku_plugins:
      - name: letsencrypt
        url: https://github.com/dokku/dokku-letsencrypt.git
      - name: mariadb
        url: https://github.com/dokku/dokku-mariadb.git
    aws_key_id: AKIAYEM6NADWH3DNKDFE
    aws_secret_key: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      38613833363963336663666163333238316230353264326633393931623666643763306638373239
      6130626132353536623934336663363265396234363464650a356137346437653263326366376131
      65333566623039386265636461623566396439306137383934333937633564613565643865346233
      3835303464306665340a373534306234383037383364383030326362643230653664353435316263
      31333361306337656631363966663562363064346631663764396466386439363062666466616531
      3632623962663634393736366564656236663332303430646162
    aws_bucket_name: reims2-backup
    db_dump: "{{ lookup('file', 'dump.sql') }}"
    backend_jwt_token: !vault |
      $ANSIBLE_VAULT;1.1;AES256
      33316631313764353364613134303933383561386233343438373735383466613837303466633034
      3639353665323431666463666161653063633463643261370a333331353631313466333731363066
      63666131333966616130383465336361616164663635326266306562393736303331393131376533
      3433613634323636650a663430326537643765383533323564616639663764346335353237363834
      66376238393362663639333438633065646334333532323364386661663065303430
  tasks:
    - name: dokku create api
      dokku_app:
        app: "{{api_app_name}}"
    - name: dokku create frontend
      dokku_app:
        app: "{{frontend_app_name}}"
    - name: dokku create docs
      dokku_app:
        app: "{{docs_app_name}}"

    - name: Create mysql
      dokku_service_create:
        name: "{{db_name}}"
        service: mariadb
    - name: Disable Mysql strict mode (to allow zero dates)
      blockinfile:
        path: "/var/lib/dokku/services/mariadb/{{db_name}}/config/disable_strict_mode.cnf"
        create: "yes"
        block: |
          [mysqld]
          sql_mode="ONLY_FULL_GROUP_BY,NO_ENGINE_SUBSTITUTION"
    - name: Restart mysql to apply config
      shell: "dokku mariadb:restart {{db_name}}"
    - name: Link database to api
      dokku_service_link:
        app: "{{ api_app_name }}"
        name: "{{db_name}}"
        service: mariadb
    - name: Enable backups for mysql to S3
      when: aws_bucket_name != ""
      shell: |
        dokku mariadb:backup-auth {{db_name}} {{aws_key_id}} {{aws_secret_key}}
        dokku mariadb:backup-schedule {{db_name}} "0 2,10,18 * * *" {{aws_bucket_name}}
    - name: Set multiple variables for frontend
      dokku_config:
        app: "{{frontend_app_name}}"
        config:
          DOKKU_LETSENCRYPT_EMAIL: substantialimpulse@pm.me
          PORT: "5000"
          API_URL: "http://{{api_app_name}}.web:5000/pvh/api"
          DOCS_URL: "http://{{docs_app_name}}.web:5000"
          HOST: "0.0.0.0"
    - name: Set letsencrypt config and backend token for api
      dokku_config:
        app: "{{api_app_name}}"
        config:
          DOKKU_LETSENCRYPT_EMAIL: substantialimpulse@pm.me
          PORT: "5000"
          PVH_JWT_SECRET: "{{backend_jwt_token}}"
    - name: Set host and port for docs
      dokku_config:
        app: "{{docs_app_name}}"
        config:
          PORT: "5000"
          HOST: "0.0.0.0"
    - name: Create network configuration (all apps in one network)
      shell: |
        dokku network:create {{dokku_network_name}}
        dokku network:set {{frontend_app_name}} attach-post-deploy {{dokku_network_name}}
        dokku network:set {{api_app_name}} attach-post-deploy {{dokku_network_name}}
        dokku network:set {{docs_app_name}} attach-post-deploy {{dokku_network_name}}
        dokku network:rebuildall
    - name: Add main domain to frontend
      dokku_domains:
        app: "{{frontend_app_name}}"
        domains:
          - "{{ frontend_domain }}"
    - name: Disable docs proxy
      dokku_proxy:
        app: "{{docs_app_name}}"
        state: absent
    - name: Enable frontend letsencrypt
      dokku_letsencrypt:
        app: "{{frontend_app_name}}"
    - name: Enable API letsencrypt
      dokku_letsencrypt:
        app: "{{api_app_name}}"
    - name: Enable letsencrypt auto renew
      shell: dokku letsencrypt:cron-job --add
    - name: Deploy frontend from git (this takes up to 10 minutes)
      dokku_clone:
        app: "{{frontend_app_name}}"
        repository: https://github.com/reims2/reims2-frontend
        version: main
        build: True
    - name: Deploy api from git (this takes up to 5 minutes)
      dokku_clone:
        app: "{{api_app_name}}"
        repository: https://github.com/reims2/reims2-backend
        version: main
        build: True
    - name: Deploy docs from git (this takes up to 5 minutes)
      dokku_clone:
        app: "{{docs_app_name}}"
        repository: https://github.com/reims2/reims2-docs
        version: main
        build: True
    - import_tasks: tasks/restore-db.yml
      tags: restore-mysql
      when: db_dump != ""
