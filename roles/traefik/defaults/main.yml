---
# Default variables for the traefik role

# Infrastructure
# Ansible instructions to deploy the infrastructure
# Copyright (C) 2019-2020  Christoph (Sheogorath) Kern
# Copyright (C) 2020       Saibotk
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, version 3 of the License.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# The install locations
traefik_domain: reims2.app
traefik_install_location: /srv/traefik
traefik_acme_location: "{{ traefik_install_location }}/acme"
traefik_config_location: "{{ traefik_install_location }}/dynamic_conf"
traefik_certresolver: "leresolver"

# The traefik/dockersocketproxy version to be used
# renovate: depName=docker.io/library/traefik
traefik_version: v2.10.1

# The domain for the traefik debug dashboard (only shown if the dashboard auth variable is defined)
traefik_dashboard_domain: "dashboard.{{ traefik_domain }}"

# A basic auth users string (see https://docs.traefik.io/v2.0/middlewares/basicauth/)
#traefik_dashboard_auth: ""

# The email to use for letencrypt certificate requests
traefik_letsencrypt_email: letsencrypt@kxlion.de

# The proxy network name and the bridge name (you usually do not touch these)
# ! Note these are used globally, as every container that wants to use traefik,
# ! has to be reachable for traefik and all containers, routed with traefik, are connected to the proxy network.
proxy_network: reims2
traefik_docker_bridge_name: reims2-proxy

# Should a general https redirect middleware be enabled for all hosts on the web endpoint?
traefik_https_redirect_all: false

# Should the letsencrypt certresolver be enabled/defined?
# Useful eg. for local testing/LAN setups
traefik_https_letsencrypt_enabled: true

# Extra configuration (dynamic) via a config file
# This has to be used, because setting default TLS configs etc. cannot be done via labels/commandline parameters
traefik_dynamic_conf:
  tls:
    stores:
      default:
        resolver: "{{ traefik_certresolver }}"
        defaultGeneratedCert:
          domain:
            main: "{{ traefik_domain }}"
            sans:
              - "{{ traefik_dashboard_domain }}"

# This config allows to add new entrypoints to traefik which are also automatically exposed / the port is automatically allocated.
# Can be used in cases where traefik needs to be used as a proxy because of the certificates it holds. Eg. gitlab registry on the
# same domain, where we want to use the existing certificate for the registry too.
#
# Example entry:
# - name: gitlabregistry
#   port: 5050
traefik_additional_entrypoints:
  - name: traefik
    port: 8080

# Enables debug log level
traefik_debug: true

# Should traefik log access?
traefik_access_log_enabled: false

# Optional environment variables that should be added (key value pairs)
traefik_options: {}
